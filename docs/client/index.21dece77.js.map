{"version":3,"file":"index.21dece77.js","sources":["../../../node_modules/svelte/motion/index.mjs","../../../node_modules/svelte-toolbox/src/components/ripple/Circle.svelte","../../../node_modules/svelte-toolbox/src/components/ripple/Ripple.svelte","../../../node_modules/svelte-toolbox/src/components/button/AWrapper.svelte","../../../node_modules/svelte-toolbox/src/components/button/Component.svelte"],"sourcesContent":["import { writable } from '../store';\nimport { now, loop, assign } from '../internal';\nimport { linear } from '../easing';\n\nfunction is_date(obj) {\n    return Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nfunction tick_spring(ctx, last_value, current_value, target_value) {\n    if (typeof current_value === 'number' || is_date(current_value)) {\n        // @ts-ignore\n        const delta = target_value - current_value;\n        // @ts-ignore\n        const velocity = (current_value - last_value) / (ctx.dt || 1 / 60); // guard div by 0\n        const spring = ctx.opts.stiffness * delta;\n        const damper = ctx.opts.damping * velocity;\n        const acceleration = (spring - damper) * ctx.inv_mass;\n        const d = (velocity + acceleration) * ctx.dt;\n        if (Math.abs(d) < ctx.opts.precision && Math.abs(delta) < ctx.opts.precision) {\n            return target_value; // settled\n        }\n        else {\n            ctx.settled = false; // signal loop to keep ticking\n            // @ts-ignore\n            return is_date(current_value) ?\n                new Date(current_value.getTime() + d) : current_value + d;\n        }\n    }\n    else if (Array.isArray(current_value)) {\n        // @ts-ignore\n        return current_value.map((_, i) => tick_spring(ctx, last_value[i], current_value[i], target_value[i]));\n    }\n    else if (typeof current_value === 'object') {\n        const next_value = {};\n        for (const k in current_value)\n            // @ts-ignore\n            next_value[k] = tick_spring(ctx, last_value[k], current_value[k], target_value[k]);\n        // @ts-ignore\n        return next_value;\n    }\n    else {\n        throw new Error(`Cannot spring ${typeof current_value} values`);\n    }\n}\nfunction spring(value, opts = {}) {\n    const store = writable(value);\n    const { stiffness = 0.15, damping = 0.8, precision = 0.01 } = opts;\n    let last_time;\n    let task;\n    let current_token;\n    let last_value = value;\n    let target_value = value;\n    let inv_mass = 1;\n    let inv_mass_recovery_rate = 0;\n    let cancel_task = false;\n    /* eslint-disable @typescript-eslint/no-use-before-define */\n    function set(new_value, opts = {}) {\n        target_value = new_value;\n        const token = current_token = {};\n        if (opts.hard || (spring.stiffness >= 1 && spring.damping >= 1)) {\n            cancel_task = true; // cancel any running animation\n            last_time = now();\n            last_value = value;\n            store.set(value = target_value);\n            return new Promise(f => f()); // fulfil immediately\n        }\n        else if (opts.soft) {\n            const rate = opts.soft === true ? .5 : +opts.soft;\n            inv_mass_recovery_rate = 1 / (rate * 60);\n            inv_mass = 0; // infinite mass, unaffected by spring forces\n        }\n        if (!task) {\n            last_time = now();\n            cancel_task = false;\n            task = loop(now => {\n                if (cancel_task) {\n                    cancel_task = false;\n                    task = null;\n                    return false;\n                }\n                inv_mass = Math.min(inv_mass + inv_mass_recovery_rate, 1);\n                const ctx = {\n                    inv_mass,\n                    opts: spring,\n                    settled: true,\n                    dt: (now - last_time) * 60 / 1000\n                };\n                const next_value = tick_spring(ctx, last_value, value, target_value);\n                last_time = now;\n                last_value = value;\n                store.set(value = next_value);\n                if (ctx.settled)\n                    task = null;\n                return !ctx.settled;\n            });\n        }\n        return new Promise(fulfil => {\n            task.promise.then(() => {\n                if (token === current_token)\n                    fulfil();\n            });\n        });\n    }\n    /* eslint-enable @typescript-eslint/no-use-before-define */\n    const spring = {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe,\n        stiffness,\n        damping,\n        precision\n    };\n    return spring;\n}\n\nfunction get_interpolator(a, b) {\n    if (a === b || a !== a)\n        return () => a;\n    const type = typeof a;\n    if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {\n        throw new Error('Cannot interpolate values of different type');\n    }\n    if (Array.isArray(a)) {\n        const arr = b.map((bi, i) => {\n            return get_interpolator(a[i], bi);\n        });\n        return t => arr.map(fn => fn(t));\n    }\n    if (type === 'object') {\n        if (!a || !b)\n            throw new Error('Object cannot be null');\n        if (is_date(a) && is_date(b)) {\n            a = a.getTime();\n            b = b.getTime();\n            const delta = b - a;\n            return t => new Date(a + t * delta);\n        }\n        const keys = Object.keys(b);\n        const interpolators = {};\n        keys.forEach(key => {\n            interpolators[key] = get_interpolator(a[key], b[key]);\n        });\n        return t => {\n            const result = {};\n            keys.forEach(key => {\n                result[key] = interpolators[key](t);\n            });\n            return result;\n        };\n    }\n    if (type === 'number') {\n        const delta = b - a;\n        return t => a + t * delta;\n    }\n    throw new Error(`Cannot interpolate ${type} values`);\n}\nfunction tweened(value, defaults = {}) {\n    const store = writable(value);\n    let task;\n    let target_value = value;\n    function set(new_value, opts) {\n        target_value = new_value;\n        let previous_task = task;\n        let started = false;\n        let { delay = 0, duration = 400, easing = linear, interpolate = get_interpolator } = assign(assign({}, defaults), opts);\n        const start = now() + delay;\n        let fn;\n        task = loop(now => {\n            if (now < start)\n                return true;\n            if (!started) {\n                fn = interpolate(value, new_value);\n                if (typeof duration === 'function')\n                    duration = duration(value, new_value);\n                started = true;\n            }\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            const elapsed = now - start;\n            if (elapsed > duration) {\n                store.set(value = new_value);\n                return false;\n            }\n            // @ts-ignore\n            store.set(value = fn(easing(elapsed / duration)));\n            return true;\n        });\n        return task.promise;\n    }\n    return {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe\n    };\n}\n\nexport { spring, tweened };\n","<script>\n\timport { tweened } from 'svelte/motion';\n\timport { onMount, createEventDispatcher } from 'svelte';\n\n\texport let x;\n\texport let y;\n\texport let top;\n\texport let left;\n\texport let time;\n\texport let color;\n\texport let spread;\n\texport let center;\n\texport let height;\n\texport let width;\n\n\tconst dispatch = createEventDispatcher();\n\n\tconst opacity = tweened(1, {\n\t\tduration: time,\n\t});\n\tconst size = tweened(0, {\n\t\tduration: time,\n\t});\n\n\tonMount(() => {\n\t\topacity.set(0);\n\t\tsize.set(spread);\n\n\t\tlet done = false;\n\t\topacity.subscribe((val) => {\n\t\t\tif (done && val == 0) finish();\n\t\t\telse done = true;\n\t\t});\n\t});\n\n\tfunction finish() {\n\t\tdispatch('finished');\n\t}\n</script>\n\n<style>\n\tdiv {\n\t\tposition: absolute;\n\t\topacity: 1;\n\t\tborder-radius: 50%;\n\t}\n</style>\n\n<div\n\tstyle=\"background: {color}; opacity: {$opacity}; width: {$size}px; height: {$size}px;\n\ttop: {center ? height / 2 - $size / 2 : y - $size / 2 - top}px; left: {center ? width / 2 - $size / 2 : x - $size / 2 - left}px;\" />\n","<script>\n\timport Circle from './Circle.svelte';\n\timport { createEventDispatcher } from 'svelte';\n\n\texport let color = 'rgba(0, 0, 0, 0.3)';\n\texport let spread = 300;\n\texport let time = 300;\n\texport let hideOverflow = true;\n\texport let disabled = false;\n\texport let block = false;\n\texport let center = false;\n\n\tconst dispatch = createEventDispatcher();\n\n\tlet ripples = [];\n\tlet container;\n\n\tfunction startRipple(e) {\n\t\tif (disabled) return;\n\t\tripples.push({\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY,\n\t\t\ttop: container.getBoundingClientRect().top,\n\t\t\tleft: container.getBoundingClientRect().left,\n\t\t\tid: new Date().getTime(),\n\t\t});\n\t\tupdate();\n\t}\n\n\tfunction stopRipple(index, id) {\n\t\tif (ripples[index].id == id) {\n\t\t\tripples.splice(index, 1);\n\t\t\tupdate();\n\t\t} else ripples = ripples.filter((r) => r.id != id);\n\t}\n\n\tfunction update() {\n\t\tripples = ripples;\n\t}\n</script>\n\n<style>\n\tdiv {\n\t\tposition: relative;\n\t\toverflow: visible;\n\t\tdisplay: inline-block;\n\t}\n\t.hideOverflow {\n\t\toverflow: hidden;\n\t}\n\t.block {\n\t\tdisplay: block;\n\t}\n</style>\n\n<div\n\ton:click={startRipple}\n\tbind:this={container}\n\tclass:hideOverflow\n\tclass:block>\n\t{#each ripples as { x, y, top, left, id }, index (id)}\n\t\t<Circle\n\t\t\t{x}\n\t\t\t{y}\n\t\t\t{top}\n\t\t\t{left}\n\t\t\t{color}\n\t\t\t{spread}\n\t\t\t{time}\n\t\t\t{center}\n\t\t\theight={container.offsetHeight}\n\t\t\twidth={container.offsetWidth}\n\t\t\ton:finished={(_) => {\n\t\t\t\tdispatch('rippleEnded');\n\t\t\t\tstopRipple(index, id);\n\t\t\t}} />\n\t{/each}\n\t<slot>Some text</slot>\n</div>\n","<script>\n\texport let href;\n\texport let disabled;\n</script>\n\n{#if href && !disabled}\n\t<a {href}>\n\t\t<slot />\n\t</a>\n{:else}\n\t<slot />\n{/if}\n","<script>\n\timport { createEventDispatcher } from 'svelte';\n\timport Ripple from '../ripple/Ripple.svelte';\n\timport AWrapper from './AWrapper.svelte';\n\n\texport let raised = false;\n\texport let primary = false;\n\texport let transition = 200;\n\texport let ripple = true;\n\texport let block = false;\n\texport let disabled = false;\n\texport let color = 'var(--buttons)';\n\texport let textColor = 'var(--primary-buttons-text-color)';\n\texport let hoverColor = `var(--buttons-hover-color)`;\n\texport let primaryHoverColor = `var(--primary-buttons-hover-color)`;\n\texport let uppercase = true;\n\texport let rippleColor = `var(--buttons-ripple-color)`;\n\texport let primaryRippleColor = `var(--primary-buttons-ripple-color)`;\n\texport let href = null;\n\n\tlet element;\n\tlet hovering = false;\n\n\tconst dispatch = createEventDispatcher();\n\n\tfunction click(e) {\n\t\tdispatch('click', e);\n\t}\n\n\tfunction hover(e) {\n\t\tdispatch('hover', e);\n\t}\n</script>\n\n<style>\n\tbutton {\n\t\tfont-size: 1.2rem;\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\tline-height: 2rem;\n\t\tfont-weight: 500;\n\t\tfont-family: Roboto, Helvetica, Arial, sans-serif;\n\n\t\tborder: none;\n\t\tbackground: rgba(0, 0, 0, 0);\n\t\toutline: none;\n\t\tborder-radius: 3px;\n\t\toverflow: hidden;\n\t}\n\tbutton:not(.button-disabled) {\n\t\tcursor: pointer;\n\t}\n\n\t.uppercase {\n\t\ttext-transform: uppercase;\n\t}\n\n\t.raised {\n\t\tbox-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n\t\t\t0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n\t}\n\t.block {\n\t\tdisplay: block;\n\t}\n</style>\n\n<AWrapper {href} {disabled}>\n\t<button\n\t\ton:click={click}\n\t\ton:mouseover={(e) => {\n\t\t\thovering = true;\n\t\t\thover();\n\t\t}}\n\t\ton:mouseout={(e) => (hovering = false)}\n\t\tclass:raised\n\t\tclass:block\n\t\tclass:uppercase\n\t\tclass:button-disabled={disabled}\n\t\t{disabled}\n\t\tstyle=\"{primary ? `background: ${hovering ? primaryHoverColor : color}; color: ${textColor}` : `color: ${color}; background: ${hovering ? hoverColor : 'rgba(0, 0, 0, 0)'}`};\n\t\ttransition: opacity {transition}ms, background {transition}ms\">\n\n\t\t<Ripple\n\t\t\tdisabled={!ripple || disabled}\n\t\t\tblock={true}\n\t\t\ttime={600}\n\t\t\tcolor={primary ? primaryRippleColor : rippleColor}>\n\t\t\t<div style=\"padding: 0 12px;\">\n\t\t\t\t<slot>Some text</slot>\n\t\t\t</div>\n\t\t</Ripple>\n\t</button>\n</AWrapper>\n"],"names":["is_date","obj","Object","prototype","toString","call","get_interpolator","a","b","type","Array","isArray","Error","arr","map","bi","i","t","fn","getTime","delta","Date","keys","interpolators","forEach","key","result","tweened","value","defaults","store","writable","task","target_value","set","new_value","opts","previous_task","started","delay","duration","easing","linear","interpolate","assign","start","now","loop","abort","elapsed","promise","update","subscribe","color","$opacity","$size","center","height","y","top","width","x","left","time","spread","dispatch","createEventDispatcher","opacity","size","onMount","done","val","container","offsetHeight","offsetWidth","ripples","id","length","hideOverflow","block","startRipple","disabled","stopRipple","index","splice","filter","r","$$invalidate","e","push","clientX","clientY","getBoundingClientRect","href","ripple","primary","primaryRippleColor","rippleColor","hovering","primaryHoverColor","textColor","hoverColor","transition","raised","uppercase","click","ctx","hover"],"mappings":"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"}