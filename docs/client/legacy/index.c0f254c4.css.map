{
  "version": 3,
  "file": "index.c0f254c4.css",
  "sources": [
    "../../../../../../node_modules/svelte-toolbox/src/components/ripple/Circle.svelte",
    "../../../../../../node_modules/svelte-toolbox/src/components/ripple/Ripple.svelte",
    "../../../../../../node_modules/svelte-toolbox/src/components/button/Component.svelte",
    "../../../../../../node_modules/svelte-toolbox/src/components/input/Component.svelte",
    "../../../../../../node_modules/svelte-toolbox/src/components/switch/Component.svelte",
    "../../../../../../node_modules/svelte-toolbox/src/components/icon-button/Link.svelte",
    "../../../../../../node_modules/svelte-toolbox/src/components/icon-button/Icon.svelte",
    "../../../../../../node_modules/svelte-toolbox/src/components/icon-button/Component.svelte",
    "../../../../../../src/routes/index.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { tweened } from 'svelte/motion';\n\timport { onMount, createEventDispatcher } from 'svelte';\n\n\texport let x;\n\texport let y;\n\texport let top;\n\texport let left;\n\texport let time;\n\texport let color;\n\texport let spread;\n\texport let center;\n\texport let height;\n\texport let width;\n\n\tconst dispatch = createEventDispatcher();\n\n\tconst opacity = tweened(1, {\n\t\tduration: time,\n\t});\n\tconst size = tweened(0, {\n\t\tduration: time,\n\t});\n\n\tonMount(() => {\n\t\topacity.set(0);\n\t\tsize.set(spread);\n\n\t\tlet done = false;\n\t\topacity.subscribe((val) => {\n\t\t\tif (done && val == 0) finish();\n\t\t\telse done = true;\n\t\t});\n\t});\n\n\tfunction finish() {\n\t\tdispatch('finished');\n\t}\n</script>\n\n<style>\n\tdiv {\n\t\tposition: absolute;\n\t\topacity: 1;\n\t\tborder-radius: 50%;\n\t}\n</style>\n\n<div\n\tstyle=\"background: {color}; opacity: {$opacity}; width: {$size}px; height: {$size}px;\n\ttop: {center ? height / 2 - $size / 2 : y - $size / 2 - top}px; left: {center ? width / 2 - $size / 2 : x - $size / 2 - left}px;\" />\n",
    "<script>\n\timport Circle from './Circle.svelte';\n\timport { createEventDispatcher } from 'svelte';\n\n\texport let color = 'rgba(0, 0, 0, 0.3)';\n\texport let spread = 300;\n\texport let time = 300;\n\texport let hideOverflow = true;\n\texport let disabled = false;\n\texport let block = false;\n\texport let center = false;\n\n\tconst dispatch = createEventDispatcher();\n\n\tlet ripples = [];\n\tlet container;\n\n\tfunction startRipple(e) {\n\t\tif (disabled) return;\n\t\tripples.push({\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY,\n\t\t\ttop: container.getBoundingClientRect().top,\n\t\t\tleft: container.getBoundingClientRect().left,\n\t\t\tid: new Date().getTime(),\n\t\t});\n\t\tupdate();\n\t}\n\n\tfunction stopRipple(index, id) {\n\t\tif (ripples[index].id == id) {\n\t\t\tripples.splice(index, 1);\n\t\t\tupdate();\n\t\t} else ripples = ripples.filter((r) => r.id != id);\n\t}\n\n\tfunction update() {\n\t\tripples = ripples;\n\t}\n</script>\n\n<style>\n\tdiv {\n\t\tposition: relative;\n\t\toverflow: visible;\n\t\tdisplay: inline-block;\n\t}\n\t.hideOverflow {\n\t\toverflow: hidden;\n\t}\n\t.block {\n\t\tdisplay: block;\n\t}\n</style>\n\n<div\n\ton:click={startRipple}\n\tbind:this={container}\n\tclass:hideOverflow\n\tclass:block>\n\t{#each ripples as { x, y, top, left, id }, index (id)}\n\t\t<Circle\n\t\t\t{x}\n\t\t\t{y}\n\t\t\t{top}\n\t\t\t{left}\n\t\t\t{color}\n\t\t\t{spread}\n\t\t\t{time}\n\t\t\t{center}\n\t\t\theight={container.offsetHeight}\n\t\t\twidth={container.offsetWidth}\n\t\t\ton:finished={(_) => {\n\t\t\t\tdispatch('rippleEnded');\n\t\t\t\tstopRipple(index, id);\n\t\t\t}} />\n\t{/each}\n\t<slot>Some text</slot>\n</div>\n",
    "<script>\n\timport { createEventDispatcher } from 'svelte';\n\timport Ripple from '../ripple/Ripple.svelte';\n\timport AWrapper from './AWrapper.svelte';\n\n\texport let raised = false;\n\texport let primary = false;\n\texport let transition = 200;\n\texport let ripple = true;\n\texport let block = false;\n\texport let disabled = false;\n\texport let color = 'var(--buttons)';\n\texport let textColor = 'var(--primary-buttons-text-color)';\n\texport let hoverColor = `var(--buttons-hover-color)`;\n\texport let primaryHoverColor = `var(--primary-buttons-hover-color)`;\n\texport let uppercase = true;\n\texport let rippleColor = `var(--buttons-ripple-color)`;\n\texport let primaryRippleColor = `var(--primary-buttons-ripple-color)`;\n\texport let href = null;\n\n\tlet element;\n\tlet hovering = false;\n\n\tconst dispatch = createEventDispatcher();\n\n\tfunction click(e) {\n\t\tdispatch('click', e);\n\t}\n\n\tfunction hover(e) {\n\t\tdispatch('hover', e);\n\t}\n</script>\n\n<style>\n\tbutton {\n\t\tfont-size: 1.2rem;\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\tline-height: 2rem;\n\t\tfont-weight: 500;\n\t\tfont-family: Roboto, Helvetica, Arial, sans-serif;\n\n\t\tborder: none;\n\t\tbackground: rgba(0, 0, 0, 0);\n\t\toutline: none;\n\t\tborder-radius: 3px;\n\t\toverflow: hidden;\n\t}\n\tbutton:not(.button-disabled) {\n\t\tcursor: pointer;\n\t}\n\n\t.uppercase {\n\t\ttext-transform: uppercase;\n\t}\n\n\t.raised {\n\t\tbox-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n\t\t\t0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n\t}\n\t.block {\n\t\tdisplay: block;\n\t}\n</style>\n\n<AWrapper {href} {disabled}>\n\t<button\n\t\ton:click={click}\n\t\ton:mouseover={(e) => {\n\t\t\thovering = true;\n\t\t\thover();\n\t\t}}\n\t\ton:mouseout={(e) => (hovering = false)}\n\t\tclass:raised\n\t\tclass:block\n\t\tclass:uppercase\n\t\tclass:button-disabled={disabled}\n\t\t{disabled}\n\t\tstyle=\"{primary ? `background: ${hovering ? primaryHoverColor : color}; color: ${textColor}` : `color: ${color}; background: ${hovering ? hoverColor : 'rgba(0, 0, 0, 0)'}`};\n\t\ttransition: opacity {transition}ms, background {transition}ms\">\n\n\t\t<Ripple\n\t\t\tdisabled={!ripple || disabled}\n\t\t\tblock={true}\n\t\t\ttime={600}\n\t\t\tcolor={primary ? primaryRippleColor : rippleColor}>\n\t\t\t<div style=\"padding: 0 12px;\">\n\t\t\t\t<slot>Some text</slot>\n\t\t\t</div>\n\t\t</Ripple>\n\t</button>\n</AWrapper>\n",
    "<script>\n\timport { createEventDispatcher, onMount, tick, afterUpdate } from 'svelte';\n\timport { MDCTextField } from '@material/textfield/index';\n\timport MDCStyles from '../Style.svelte';\n\n\texport let value = null;\n\texport let placeholder = null;\n\texport let helper = null;\n\texport let type = 'text';\n\texport let rows = 1;\n\texport let compress = true;\n\texport let color = 'var(--inputs)';\n\texport let background = 'var(--inputs-background)';\n\texport let backgroundHover = 'var(--inputs-background-hover)';\n\texport let backgroundFocus = 'var(--inputs-background-focus)';\n\texport let placeholderColor = 'var(--inputs-placeholder)';\n\texport let outlineColor = 'var(--inputs-outline)';\n\texport let outlineHover = 'var(--inputs-outline-hover)';\n\texport let outlined = false;\n\texport let resize = false;\n\texport let allowEnter = false;\n\texport let isFocused = false;\n\texport let maxChars = null;\n\texport let error = null;\n\texport let disabled = false;\n\texport let block = false;\n\texport let showErrorIcon = true;\n\texport let trim = false;\n\texport let leadingIcon = null;\n\texport let trailingIcon = null;\n\texport let leadingIconColor = 'var(--inputs-placeholder)';\n\texport let trailingIconColor = 'var(--inputs-placeholder)';\n\texport let leadingIconIsButton = false;\n\texport let trailingIconIsButton = false;\n\texport let leadingIconHovering = false;\n\texport let trailingIconHovering = false;\n\n\tlet textField;\n\tlet startUpEl;\n\tlet inputEl;\n\tlet hovering = false;\n\tlet errors = 'var(--all-errors)';\n\tlet randomId = 'input-component-' + Math.random() * Math.random();\n\tlet showTextarea = rows > 1 || rows == null;\n\tlet remSize = parseInt(getComputedStyle(document.documentElement).fontSize);\n\tlet rowSize = remSize * 1.75;\n\tlet padding = rows == 1 ? 30 : 16;\n\tlet maxSize = rowSize * rows + padding;\n\tlet floatAboveStart = false;\n\tlet outlinedElement;\n\tlet labelOutlined;\n\n\tconst dispatch = createEventDispatcher();\n\n\tonMount(async () => {\n\t\tif (maxChars != null) inputEl.setAttribute('maxlength', maxChars);\n\t\ttextField = new MDCTextField(startUpEl);\n\t\tif (isFocused) textField.focus();\n\n\t\tresizeTextarea(inputEl);\n\t\tif (value != null && value != undefined && value != '') {\n\t\t\tinputEl.value = value;\n\t\t\tfloatAboveStart = true;\n\n\t\t\tif (outlined) {\n\t\t\t\tawait tick();\n\t\t\t\toutlinedElement.style.width = addPx(\n\t\t\t\t\tlabelOutlined.offsetWidth * 0.75 + 8\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t});\n\n\tafterUpdate(() => {\n\t\tif (textField) {\n\t\t\tif (isFocused) textField.focus();\n\t\t\telse inputEl.blur();\n\t\t}\n\t});\n\n\tfunction resizeTextarea(el) {\n\t\tif (compress) {\n\t\t\tif (rows != null) {\n\t\t\t\tif (el.scrollHeight > maxSize) return;\n\t\t\t}\n\n\t\t\tif (el.value == '') el.style.height = addPx(rowSize + padding);\n\t\t\telse {\n\t\t\t\tel.style.height = 'auto';\n\t\t\t\tel.style.height = addPx(el.scrollHeight);\n\t\t\t}\n\t\t} else {\n\t\t\tel.style.height = addPx(maxSize);\n\t\t}\n\t}\n\n\tfunction addPx(val) {\n\t\treturn `${val}px`;\n\t}\n\n\t// Events\n\tfunction handleInput(e) {\n\t\tvalue = event.target.value;\n\t\tresizeTextarea(e.target);\n\t\tdispatch('valuechanged', e.target.value);\n\t}\n\tfunction handleKeyup(e) {\n\t\t// void\n\t}\n\tasync function handleKeydown(e) {\n\t\tdispatch('prevaluechanged', value);\n\t\tdispatch('keypress', e);\n\t\tif (!allowEnter && e.key == 'Enter' && !e.shiftKey) {\n\t\t\te.preventDefault();\n\t\t\tawait tick();\n\t\t\tdispatch('done', value);\n\t\t\tisFocused = false;\n\t\t}\n\t}\n\tfunction handleFocus(e) {\n\t\tisFocused = true;\n\t\tdispatch('focus');\n\t}\n\tfunction handleBlur(e) {\n\t\tisFocused = false;\n\t\tdispatch('blur');\n\t}\n\tfunction handleMouseover(e) {\n\t\thovering = true;\n\t}\n\tfunction handleMouseleave(e) {\n\t\thovering = false;\n\t}\n</script>\n\n<style>\n\t.mdc-custom-inline-block {\n\t\tdisplay: inline-block;\n\t\twidth: 300px;\n\t}\n\t.mdc-custom-container {\n\t\twidth: 100%;\n\t}\n\t.mdc-custom-error {\n\t\tfont-family: Roboto, sans-serif;\n\t\t-moz-osx-font-smoothing: grayscale;\n\t\t-webkit-font-smoothing: antialiased;\n\t\tfont-size: 0.75rem;\n\t\tline-height: 1.25rem;\n\t\tfont-weight: 400;\n\t\tletter-spacing: 0.0333333333em;\n\t\ttext-decoration: inherit;\n\t\ttext-transform: inherit;\n\t\tdisplay: block;\n\t\tmargin-top: 0;\n\t\tline-height: normal;\n\t\tmargin: 0;\n\t\tcolor: var(--all-errors);\n\t}\n\t.mdc-custom-error::before {\n\t\tdisplay: inline-block;\n\t\twidth: 0;\n\t\theight: 16px;\n\t\tcontent: '';\n\t\tvertical-align: 0;\n\t}\n\t.mdc-custom-no-resize {\n\t\tresize: none;\n\t}\n\t.mdc-custom-no-scroll {\n\t\toverflow: hidden;\n\t}\n</style>\n\n<MDCStyles />\n\n<div class=\"over\" class:mdc-custom-inline-block={!block}>\n\t<div\n\t\tclass=\"mdc-text-field mdc-custom-container\"\n\t\tbind:this={startUpEl}\n\t\tclass:mdc-text-field--textarea={showTextarea}\n\t\tclass:mdc-text-field--no-label={!placeholder}\n\t\tclass:mdc-text-field--disabled={disabled}\n\t\tclass:mdc-text-field--with-leading-icon={leadingIcon}\n\t\tclass:mdc-text-field--with-trailing-icon={(error && showErrorIcon) || trailingIcon}\n\t\tclass:mdc-text-field--outlined={outlined}\n\t\tclass:input-disabled={disabled}\n\t\tclass:input-focused={isFocused}\n\t\tclass:input-error={error}\n\t\tclass:input-else={!error && !isFocused && !disabled}\n\t\tstyle=\"background-color: {outlined ? 'unset' : isFocused ? backgroundFocus : hovering ? backgroundHover : background};\"\n\t\ton:mouseover={handleMouseover}\n\t\ton:mouseleave={handleMouseleave}>\n\n\t\t{#if leadingIcon}\n\t\t\t<i\n\t\t\t\tclass=\"material-icons mdc-text-field__icon leading-icon\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\ton:click={(e) => dispatch('leadingiconclick', e)}\n\t\t\t\ton:mouseover={(e) => {\n\t\t\t\t\tleadingIconHovering = true;\n\t\t\t\t\tdispatch('leadingiconhover', e);\n\t\t\t\t}}\n\t\t\t\ton:mouseout={(e) => (leadingIconHovering = false)}\n\t\t\t\tstyle=\"{!leadingIconIsButton ? 'z-index: -1;' : ''}color: {leadingIconColor}\">\n\t\t\t\t{leadingIcon}\n\t\t\t</i>\n\t\t{/if}\n\n\t\t{#if showTextarea}\n\t\t\t<textarea\n\t\t\t\tbind:this={inputEl}\n\t\t\t\tclass=\"mdc-text-field__input\"\n\t\t\t\tclass:mdc-custom-no-resize={!resize}\n\t\t\t\tclass:mdc-custom-no-scroll={rows == null}\n\t\t\t\tstyle=\"caret-color: {error ? errors : color};\"\n\t\t\t\tid={randomId}\n\t\t\t\trows={rows == null || compress ? 1 : rows}\n\t\t\t\t{disabled}\n\t\t\t\ton:input={handleInput}\n\t\t\t\ton:keyup={handleKeyup}\n\t\t\t\ton:keydown={handleKeydown}\n\t\t\t\ton:focus={handleFocus}\n\t\t\t\ton:blur={handleBlur} />\n\t\t{:else}\n\t\t\t<input\n\t\t\t\t{type}\n\t\t\t\tbind:this={inputEl}\n\t\t\t\tclass=\"mdc-text-field__input\"\n\t\t\t\tstyle=\"caret-color: {error ? errors : color}\"\n\t\t\t\t{disabled}\n\t\t\t\tid={randomId}\n\t\t\t\ton:input={handleInput}\n\t\t\t\ton:keyup={handleKeyup}\n\t\t\t\ton:keydown={handleKeydown}\n\t\t\t\ton:focus={handleFocus}\n\t\t\t\ton:blur={handleBlur} />\n\t\t{/if}\n\n\t\t{#if placeholder != null && !outlined}\n\t\t\t<label\n\t\t\t\tclass=\"mdc-floating-label\"\n\t\t\t\tclass:mdc-floating-label--float-above={floatAboveStart}\n\t\t\t\tclass:mdc-floating-label__float-above={floatAboveStart}\n\t\t\t\tfor={randomId}\n\t\t\t\tstyle=\"color: {error ? errors : isFocused ? color : placeholderColor}\">\n\t\t\t\t{placeholder}\n\t\t\t</label>\n\t\t{/if}\n\n\t\t{#if error && showErrorIcon}\n\t\t\t<i\n\t\t\t\tclass=\"material-icons mdc-text-field__icon error-icon\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\tstyle=\"color: {errors}\">\n\t\t\t\terror\n\t\t\t</i>\n\t\t{:else if trailingIcon}\n\t\t\t<i\n\t\t\t\tclass=\"material-icons mdc-text-field__icon trailing-icon\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\ton:click={(e) => dispatch('trailingiconclick', e)}\n\t\t\t\ton:mouseover={(e) => {\n\t\t\t\t\ttrailingIconHovering = true;\n\t\t\t\t\tdispatch('trailingiconhover', e);\n\t\t\t\t}}\n\t\t\t\ton:mouseout={(e) => (trailingIconHovering = false)}\n\t\t\t\tstyle=\"{!trailingIconIsButton ? 'z-index: -1;' : ''}color: {trailingIconColor}\">\n\t\t\t\t{trailingIcon}\n\t\t\t</i>\n\t\t{/if}\n\n\t\t{#if outlined}\n\t\t\t<div\n\t\t\t\tclass=\"mdc-notched-outline\"\n\t\t\t\tclass:mdc-notched-outline--notched={floatAboveStart}>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"mdc-notched-outline__leading\"\n\t\t\t\t\tstyle=\"border-color: {isFocused ? color : hovering ? outlineHover : outlineColor}\" />\n\t\t\t\t{#if placeholder != null}\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"mdc-notched-outline__notch\"\n\t\t\t\t\t\tstyle=\"border-color: {isFocused ? color : hovering ? outlineHover : outlineColor}\"\n\t\t\t\t\t\tbind:this={outlinedElement}>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\tfor={randomId}\n\t\t\t\t\t\t\tbind:this={labelOutlined}\n\t\t\t\t\t\t\tclass=\"mdc-floating-label\"\n\t\t\t\t\t\t\tclass:mdc-floating-label--float-above={floatAboveStart}\n\t\t\t\t\t\t\tclass:mdc-floating-label__float-above={floatAboveStart}\n\t\t\t\t\t\t\tstyle=\"color: {isFocused ? color : placeholderColor}\">\n\t\t\t\t\t\t\t{placeholder}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t\t<div\n\t\t\t\t\tclass=\"mdc-notched-outline__trailing\"\n\t\t\t\t\tstyle=\"border-color: {isFocused ? color : hovering ? outlineHover : outlineColor}\" />\n\t\t\t</div>\n\t\t{:else}\n\t\t\t<div\n\t\t\t\tclass=\"mdc-line-ripple\"\n\t\t\t\tstyle=\"background-color: {error ? errors : color}\" />\n\t\t{/if}\n\t</div>\n\n\t{#if !trim}\n\t\t<div class=\"mdc-text-field-helper-line\">\n\t\t\t{#if error == null}\n\t\t\t\t<div class=\"mdc-text-field-helper-text\" aria-hidden={false}>\n\t\t\t\t\t{#if helper}{helper}{/if}\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t\t<div class=\"mdc-custom-error\">\n\t\t\t\t{#if error}{error}{/if}\n\t\t\t</div>\n\n\t\t\t{#if maxChars != null}\n\t\t\t\t<div class=\"mdc-text-field-character-counter\" />\n\t\t\t{/if}\n\t\t</div>\n\t{/if}\n</div>\n",
    "<script>\n\timport Ripple from '../ripple/Ripple.svelte';\n\timport { createEventDispatcher } from 'svelte';\n\n\texport let on = false;\n\texport let onColor = 'var(--switch-on-color)';\n\texport let offColor = 'var(--switch-off-color)';\n\texport let onColorTrack = 'var(--switch-on-color-track)';\n\texport let offColorTrack = 'var(--switch-off-color-track)';\n\texport let activeColor = 'var(--switch-active-color)';\n\texport let activeOnColor = 'var(--switch-on-active-color)';\n\texport let hoverColor = 'var(--switch-hover-color)';\n\texport let hoverOnColor = 'var(--switch-hover-on-color)';\n\texport let shouldRipple = true;\n\texport let disabled = false;\n\n\tlet hovering = false;\n\tlet handleHovering = false;\n\tlet active = false;\n\tlet innerClicked = false;\n\n\tconst dispatch = createEventDispatcher();\n\n\tfunction handleChange(e) {\n\t\tactive = true;\n\t\tdispatch('change', e);\n\t}\n\tfunction handleMouseover(e) {\n\t\thovering = true;\n\t}\n\tfunction handleMouseleave(e) {\n\t\thovering = false;\n\t}\n\tfunction outsideClick(e) {\n\t\tif (!innerClicked) active = false;\n\t\telse innerClicked = false;\n\t}\n</script>\n\n<style>\n\tlabel {\n\t\t--height: 48px;\n\t\tdisplay: inline-block;\n\t\twidth: 68px;\n\t\theight: var(--height);\n\t}\n\t.over {\n\t\tdisplay: inline-block;\n\t\twidth: 68px;\n\t\theight: var(--height);\n\t\tposition: relative;\n\t\tcursor: pointer;\n\t}\n\t.track {\n\t\twidth: 32px;\n\t\theight: 14px;\n\t\tborder-radius: 7px;\n\t\tmargin: 17px 18px;\n\t}\n\t.thumb {\n\t\tposition: absolute;\n\t\theight: var(--height);\n\t\twidth: var(--height);\n\t\ttransition: left 200ms ease-out, background 0.2s;\n\t\tz-index: 1;\n\t\toverflow: hidden;\n\t}\n\t.thumb-inner {\n\t\t--margin: 14px;\n\t\tmargin: var(--margin);\n\t\twidth: calc(var(--height) - var(--margin) * 2);\n\t\theight: calc(var(--height) - var(--margin) * 2);\n\t\tbox-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n\t\t\t0px 2px 2px 0px rgba(0, 0, 0, 0.14),\n\t\t\t0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\t}\n\tinput {\n\t\tdisplay: none;\n\t}\n\n\t.round {\n\t\tborder-radius: 50%;\n\t}\n\t.switch-disabled {\n\t\topacity: 0.6;\n\t\tcursor: not-allowed;\n\t}\n\t.cover {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tz-index: 2;\n\t}\n</style>\n\n<svelte:window on:click={outsideClick} />\n\n<label>\n\t<div\n\t\tclass=\"over\"\n\t\ton:click={(_) => (innerClicked = true)}\n\t\ton:mouseover={handleMouseover}\n\t\ton:mouseleave={handleMouseleave}\n\t\tclass:switch-on={on}\n\t\tclass:switch-off={!on}\n\t\tclass:switch-disabled={disabled}>\n\t\t<div\n\t\t\tclass=\"thumb round\"\n\t\t\tstyle=\"left:{on ? '20px' : '0px'}; background: {active ? (on ? activeOnColor : activeColor) : handleHovering ? (on ? hoverOnColor : hoverColor) : 'none'}\"\n\t\t\ton:mouseover={(_) => (handleHovering = true)}\n\t\t\ton:mouseleave={(_) => (handleHovering = false)}>\n\t\t\t<Ripple\n\t\t\t\tdisabled={!shouldRipple}\n\t\t\t\tcolor={on ? onColorTrack : offColorTrack}\n\t\t\t\tspread={100}\n\t\t\t\ttime={200}\n\t\t\t\tcenter={true}>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"thumb-inner round\"\n\t\t\t\t\tstyle=\"background: {on ? onColor : offColor}\" />\n\t\t\t</Ripple>\n\t\t</div>\n\t\t<div\n\t\t\tclass=\"track\"\n\t\t\tstyle=\"background: {on ? onColorTrack : offColorTrack}\" />\n\t\t<input\n\t\t\ttype=\"checkbox\"\n\t\t\t{disabled}\n\t\t\ton:change={handleChange}\n\t\t\tbind:checked={on} />\n\t\t{#if disabled}\n\t\t\t<div class=\"cover\" />\n\t\t{/if}\n\t</div>\n</label>\n",
    "<script>\n\texport let href;\n\texport let newTab;\n</script>\n\n<style>\n\ta {\n\t\toverflow: auto;\n\t\tposition: relative;\n\t\tpadding: 100px 0;\n\t}\n</style>\n\n{#if href}\n\t<a {href} target={newTab ? '_blank' : '_self'}>\n\t\t<slot />\n\t</a>\n{:else}\n\t<slot />\n{/if}\n",
    "<script>\n\timport Link from './Link.svelte';\n\timport { fade, scale } from 'svelte/transition';\n\n\texport let name = 'error';\n\texport let href = null;\n\texport let style = '';\n\texport let color = 'var(--icon-buttons)';\n\texport let newTab = false;\n\n\tlet cs;\n\t$: cs = `color: ${color}; ${style};`;\n</script>\n\n<style>\n\ti {\n\t\tmargin: 10px;\n\t}\n</style>\n\n<Link {href} {newTab}>\n\t<i class=\"material-icons\" style={cs}>{name}</i>\n</Link>\n",
    "<script>\n\timport Ripple from '../ripple/Ripple.svelte';\n\timport Icon from './Icon.svelte';\n\timport { createEventDispatcher } from 'svelte';\n\n\texport let icon = 'error';\n\texport let disabled = false;\n\texport let on = false;\n\texport let activeColor = 'var(--icon-buttons-active)';\n\texport let hoverColor = 'var(--icon-buttons-hover)';\n\texport let rippleColor = 'var(--icon-buttons-ripple)';\n\n\tlet toggle = typeof icon == 'object' && icon[0] != undefined;\n\tlet detail = typeof icon == 'object' && icon[0] == undefined;\n\tlet simple = typeof icon == 'string';\n\n\tlet active = false;\n\tlet hovering = false;\n\tlet insideClicked = false;\n\tlet backgroundColor = 'rgba(0, 0, 0, 0)';\n\n\tfunction getIconDetail(icon) {\n\t\tlet detailedIcon = {};\n\t\tconst values = ['name', 'href', 'style', 'color'];\n\t\tvalues.forEach((element) => {\n\t\t\tif (icon[element] != undefined) {\n\t\t\t\tif (typeof icon[element] == 'string')\n\t\t\t\t\tdetailedIcon[element] = icon[element];\n\t\t\t\telse\n\t\t\t\t\tthrow new TypeError(\n\t\t\t\t\t\t`Unexpected type in 'icon': '${element}' IconButton expected a string, but recieved '${typeof icon[\n\t\t\t\t\t\t\telement\n\t\t\t\t\t\t]}'.`\n\t\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn detailedIcon;\n\t}\n\n\t// Events\n\tconst dispatch = createEventDispatcher();\n\n\tfunction handleMouseover(e) {\n\t\tdispatch('hover', e);\n\t\thovering = true;\n\t}\n\n\tfunction handleClick(e) {\n\t\tdispatch('click', e);\n\t\tinsideClicked = true;\n\t\tactive = true;\n\t\ton = !on;\n\t}\n\n\tfunction handleMouseout(e) {\n\t\thovering = false;\n\t}\n\n\tfunction handleOutsideClick(e) {\n\t\tif (!insideClicked) active = false;\n\t\telse insideClicked = false;\n\t}\n</script>\n\n<style>\n\tbutton {\n\t\tborder: none;\n\t\tborder: none;\n\t\tbackground: rgba(0, 0, 0, 0);\n\t\toutline: none;\n\t\tcursor: pointer;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tposition: relative;\n\t\tz-index: 1;\n\t\ttransition: background 300ms;\n\t}\n\t.wrapper {\n\t\toverflow: hidden;\n\t\tborder-radius: 50%;\n\t\tdisplay: inline-block;\n\t}\n</style>\n\n<svelte:window on:click={handleOutsideClick} />\n\n<div class=\"wrapper\">\n\t<Ripple\n\t\ttime={400}\n\t\tspread={100}\n\t\thideOverflow={false}\n\t\tcolor={rippleColor}\n\t\tcenter={true}>\n\t\t<button\n\t\t\tstyle=\"background: {active ? activeColor : hovering ? hoverColor : backgroundColor}\"\n\t\t\ton:mouseover={handleMouseover}\n\t\t\ton:mouseout={handleMouseout}\n\t\t\ton:click={handleClick}>\n\n\t\t\t{#if simple}\n\t\t\t\t<Icon name={icon} />\n\t\t\t{:else if detail}\n\t\t\t\t<Icon {...getIconDetail(icon)} />\n\t\t\t{:else if toggle}\n\t\t\t\t{#if on}\n\t\t\t\t\t<Icon {...getIconDetail(icon[0])} />\n\t\t\t\t{:else}\n\t\t\t\t\t<Icon {...getIconDetail(icon[1])} />\n\t\t\t\t{/if}\n\t\t\t{/if}\n\n\t\t</button>\n\t</Ripple>\n</div>\n",
    "<style>\n\th1, figure, p {\n\t\ttext-align: center;\n\t\tmargin: 0 auto;\n\t}\n\n\th1 {\n\t\tfont-size: 2.8em;\n\t\ttext-transform: uppercase;\n\t\tfont-weight: 700;\n\t\tmargin: 0 0 0.5em 0;\n\t}\n\n\tfigure {\n\t\tmargin: 0 0 1em 0;\n\t}\n\n\timg {\n\t\twidth: 100%;\n\t\tmax-width: 400px;\n\t\tmargin: 0 0 1em 0;\n\t}\n\n\tp {\n\t\tmargin: 1em auto;\n\t}\n\n\t@media (min-width: 480px) {\n\t\th1 {\n\t\t\tfont-size: 4em;\n\t\t}\n\t}\n</style>\n\n<script>\n\timport { UIButton } from 'svelte-toolbox';\n</script>\n\n<svelte:head>\n\t<title>Sapper project template</title>\n</svelte:head>\n\n<h1>Great success!</h1>\n\n<figure>\n\t<img alt='Borat' src='great-success.png'>\n\t<figcaption>HIGH FIVE!</figcaption>\n</figure>\n\n<p><strong>Try editing this file (src/routes/index.svelte) to test live reloading.</strong></p>\n\n<p>\n\t<UIButton>Click Here!</UIButton>\n</p>"
  ],
  "names": [],
  "mappings": "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"
}